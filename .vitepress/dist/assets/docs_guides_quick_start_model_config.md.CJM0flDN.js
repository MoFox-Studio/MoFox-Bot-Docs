import{_ as l,I as s,c as o,o as n,a3 as r,J as a}from"./chunks/framework.xghCY4x5.js";const m=JSON.parse('{"title":"模型配置快速上手","description":"","frontmatter":{},"headers":[],"relativePath":"docs/guides/quick_start_model_config.md","filePath":"docs/guides/quick_start_model_config.md","lastUpdated":1757163790000}'),h={name:"docs/guides/quick_start_model_config.md"};function p(d,i,c,k,g,u){const e=s("NolebaseGitContributors"),t=s("NolebaseGitChangelog");return n(),o("div",null,[i[0]||(i[0]=r(`<h1 id="模型配置快速上手" tabindex="-1">模型配置快速上手 <a class="header-anchor" href="#模型配置快速上手" aria-label="Permalink to “模型配置快速上手”">​</a></h1><p>本篇指南将用最直接的方式，告诉你如何让 MoFox-Bot 开口说话。</p><h2 id="核心-填入你的-api-密钥" tabindex="-1">核心：填入你的 API 密钥 <a class="header-anchor" href="#核心-填入你的-api-密钥" aria-label="Permalink to “核心：填入你的 API 密钥”">​</a></h2><p>对于新手，你<strong>唯一</strong>需要做的，就是在配置文件中填入你的 API 密钥。</p><p>如果没有，点击<a href="https://cloud.siliconflow.cn/" target="_blank" rel="noreferrer">硅基流动注册</a>进行注册</p><p>ps：如果你<a href="https://cloud.siliconflow.cn/i/0ww8zcOn" target="_blank" rel="noreferrer">点击这里注册</a>，我和你都能获得14元赠金，感谢支持</p><h3 id="操作步骤" tabindex="-1">操作步骤 <a class="header-anchor" href="#操作步骤" aria-label="Permalink to “操作步骤”">​</a></h3><ol><li><p><strong>创建配置文件</strong>:</p><ul><li>在 <code>mmc</code> 文件夹中, 找到 <code>template/model_config_template.toml</code> 文件。</li><li>复制它，并粘贴到 <code>config/</code> 目录下，重命名为 <code>model_config.toml</code>。</li></ul></li><li><p><strong>找到并修改 API Key</strong>:</p><ul><li>打开你刚刚创建的 <code>model_config.toml</code> 文件。</li><li>找到下面这几行：<div class="language-toml"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">api_providers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;siliconflow&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">base_url = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://api.siliconflow.cn/v1&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">api_key = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;your-api-key-here&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # &lt;--- 就是这里！</span></span></code></pre></div></li><li>将 <code>&quot;your-api-key-here&quot;</code> 替换成你自己的 API 密钥（通常以 <code>sk-</code> 开头）。</li><li>现在，<code>api_key</code> 字段也支持多个密钥轮询。你可以像这样配置多个密钥：<div class="language-toml"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">api_key = [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;your-api-key-here-1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;your-api-key-here-2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div></li></ul></li></ol><p><strong>完成！</strong> 保存文件并重启机器人即可。</p><h3 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to “注意事项”">​</a></h3><ul><li>模板文件中的其他配置项<strong>均为默认可用配置</strong>，在你熟悉所有功能前，<strong>无需修改</strong>。</li><li>默认配置使用的是 <strong>siliconflow</strong> 服务。</li><li>如果你想进行更复杂的配置（如更换模型、使用本地模型等），请参考【<a href="./model_configuration_guide.html">模型配置进阶指南</a>】，那里有获取各类API Key的详细说明。</li></ul>`,11)),a(e),a(t)])}const E=l(h,[["render",p]]);export{m as __pageData,E as default};
